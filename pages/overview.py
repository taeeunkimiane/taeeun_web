import streamlit as st

st.set_page_config(page_title="로봇 최적화 개요", layout="wide")

st.title("🧠 로봇 시스템 최적화 시뮬레이터")

st.markdown("""
이 시뮬레이터는 다양한 로봇 시스템의 최적화 요소를 탐구하기 위해 개발되었습니다. 
아래 각 항목은 실제 로봇 구현에서 중요한 요소이며, 사용자는 해당 항목들을 직접 조작하고 실험하면서
최적화가 로봇 성능에 어떤 영향을 미치는지 체험할 수 있습니다.

---

### 📌 구성된 시뮬레이터 목록

- **물리적 하드웨어 최적화**: 역기구학, 하중 분산, 스핀트로닉스 센서 등 적용
- **자체 학습 AI 시스템 최적화**: 옵티마이저 튜닝 (Adam, RMSProp, 등), 학습률, 베타 값 조절 실험
- **비전 시스템 최적화**: 가우시안 필터, 윤곽선 추출, DoG/LoG 시각화
- **에너지 효율 최적화**: 피에조 소자 + 회생 제동 회로를 통한 에너지 회수
- **메모리 최적화**: 뉴로모픽 메모리, 상태 보존형 저장 구조 등 탐구

---

### 🎮 사용 방법

좌측 사이드바에서 최적화하고 싶은 항목을 선택하세요. 
각 항목마다 시뮬레이터가 제공되며, 조절 가능한 파라미터와 시각화 출력이 포함되어 있습니다.

---

### 💡 사용 기술 및 시뮬레이션 요소

- **Front-end**: Streamlit + Plotly + OpenCV.js
- **Back-end**: PyTorch 기반 딥러닝 모듈 + 계산 시뮬레이션 모델
- **조작 요소**: 슬라이더, 드롭다운, 체크박스 등 실시간 조작
- **출력 요소**: 학습 곡선, 에너지 그래프, 이미지 필터링 결과 등 시각화

---

### 📚 탐구 목적

본 시뮬레이터는 다음과 같은 탐구 목표를 갖고 설계되었습니다:

- 다양한 최적화 기법을 비교 분석하며 그 효과를 체험
- 실제 물리 기반 로봇 동작과 학습 기반 인공지능 알고리즘의 통합 가능성 탐색
- 시스템 레벨의 통합 최적화 설계를 위한 이해 기반 구축

---

👉 각 최적화 항목은 `pages/experiments/optimization/` 디렉터리에 모듈화되어 있습니다.
"main.py"에서 사이드바 조작을 통해 호출되며, 학습과 시뮬레이션이 진행됩니다.

즐겁게 실험해보세요! 😎
""")

